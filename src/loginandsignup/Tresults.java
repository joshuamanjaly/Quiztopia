/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package loginandsignup;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.*;

public class Tresults extends javax.swing.JFrame {

    private JTable resultsTable;
    private JScrollPane scrollPane;

    /**
     * Creates new form Tresults
     */
    public Tresults() {
        initComponents();
        fetchResults();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        
        // Set up the JTable
        resultsTable = new JTable();
        scrollPane = new JScrollPane(resultsTable);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 500));

        jPanel1.setPreferredSize(new java.awt.Dimension(800, 500));
        jPanel1.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(0, 51, 102));

        jLabel1.setFont(new java.awt.Font("Showcard Gothic", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("QUIZTOPIA");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(254, 254, 254)
                    .addComponent(jLabel1)
                    .addContainerGap(276, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                    .addContainerGap(32, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGap(27, 27, 27))
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 800, 120);
        
        // Add the scroll pane containing the results table
        scrollPane.setBounds(50, 150, 700, 300);
        jPanel1.add(scrollPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void fetchResults() {
    String url = "jdbc:mysql://localhost:3306/quiztopia"; // Update if needed
    String user = "root"; // Replace with your DB username
    String password = ""; // Replace with your DB password

    // Query to join quiz_results and users tables to get name, result_id, and score
    String query = "SELECT qr.result_id, u.name, qr.score " +
                   "FROM quiz_results qr " +
                   "JOIN users u ON qr.user_id = u.id"; // Ensure id in users is matched with user_id in quiz_results

    try (Connection conn = DriverManager.getConnection(url, user, password);
         Statement stmt = conn.createStatement();
         ResultSet rs = stmt.executeQuery(query)) {

        // Set up the table model with relevant columns
        DefaultTableModel model = new DefaultTableModel(new String[]{"Result ID", "Student Name", "Score"}, 0);
        
        while (rs.next()) {
            int resultId = rs.getInt("result_id"); // Retrieve result_id from quiz_results
            String studentName = rs.getString("name"); // Retrieve name from users
            int score = rs.getInt("score"); // Retrieve score from quiz_results
            
            // Add row to model
            model.addRow(new Object[]{resultId, studentName, score});
        }
        
        resultsTable.setModel(model); // Set model to table
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Error fetching results: " + e.getMessage());
    }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tresults().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration                   
}
